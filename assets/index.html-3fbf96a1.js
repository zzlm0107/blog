import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as a,c,a as t,b as e,d as r}from"./app-3f51fd7d.js";const l={},i=t("p",null,"学习网站参考：",-1),p=t("strong",null,"typescript中文网",-1),_={href:"https://ts.nodejs.cn/",target:"_blank",rel:"noopener noreferrer"},d=t("strong",null,"菜鸟教程",-1),h={href:"https://www.runoob.com/typescript/ts-tutorial.html",target:"_blank",rel:"noopener noreferrer"},u=t("h2",{id:"javascript的优缺点",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#javascript的优缺点","aria-hidden":"true"},"#"),e(" JavaScript的优缺点")],-1),f=t("p",null,[e("当我们学习过JavaScript后，我们已经知道它是一种弱类型语言，即我们在创建变量时不需要去指定类型，编译器会自动帮我们指定，虽然这种模式可以让我们在初期学习是获得便利，不需要过多的关注类型，但随着不断的深入学习，这种模式的弊端也逐渐显露出来："),t("strong",null,"一个变量会在不同类型之间来回切换，造成类型混乱；对象身上的属性不明确，不利于项目维护等"),e(" 这些问题对一个编程语言来说都是影响不小的。")],-1),m=t("h2",{id:"什么是typescript",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#什么是typescript","aria-hidden":"true"},"#"),e(" 什么是TypeScript")],-1),x=t("p",null,[e("针对js的缺点，TypeScript 诞生了，TypeScript 是 JavaScript 的超集，扩展了 JavaScript 的语法，TypeScript 通过 "),t("strong",null,"类型注解"),e(" 提供编译时的静态类型检查。")],-1);function v(y,S){const n=s("ExternalLinkIcon");return a(),c("div",null,[i,t("ul",null,[t("li",null,[t("p",null,[p,e(),t("a",_,[e("https://ts.nodejs.cn/"),r(n)])])]),t("li",null,[t("p",null,[d,e(),t("a",h,[e("https://www.runoob.com/typescript/ts-tutorial.html"),r(n)])])])]),u,f,m,x])}const k=o(l,[["render",v],["__file","index.html.vue"]]);export{k as default};
