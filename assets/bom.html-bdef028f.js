const t=JSON.parse('{"key":"v-37c1c5d6","path":"/code/webDev/javascript/bom.html","title":"BOM 相关","lang":"zh-CN","frontmatter":{"title":"BOM 相关","icon":"bom","date":"2022-11-03T00:00:00.000Z","category":["JS","浏览器"],"tag":["bom"],"description":"browser object model 浏览器对象模型。BOM可以使我们通过JS来操作浏览器，注意浏览器的全局对象只有一个即window，下面的说明对象都是挂载在window的，属于是window的属性。只是书写时会省略掉window navigator对象 代表的当前浏览器的信息，使用较少，其中主要用 userAgent属性 来判断浏览器标识。 history对象 history对象可以用来操作浏览器的历史记录，实现向前或向后翻页。 history.back(): 回退到上一个页面 history.forward(): 前进到下一个页面 history.go(参数): 跳转到指定的页面，当前页面是0，正整数向前跳转对应数量页面，负整数向后回退对应数量页面","head":[["meta",{"property":"og:url","content":"https://zzlm0107.github.io/blog/blog/code/webDev/javascript/bom.html"}],["meta",{"property":"og:site_name","content":"正の博客"}],["meta",{"property":"og:title","content":"BOM 相关"}],["meta",{"property":"og:description","content":"browser object model 浏览器对象模型。BOM可以使我们通过JS来操作浏览器，注意浏览器的全局对象只有一个即window，下面的说明对象都是挂载在window的，属于是window的属性。只是书写时会省略掉window navigator对象 代表的当前浏览器的信息，使用较少，其中主要用 userAgent属性 来判断浏览器标识。 history对象 history对象可以用来操作浏览器的历史记录，实现向前或向后翻页。 history.back(): 回退到上一个页面 history.forward(): 前进到下一个页面 history.go(参数): 跳转到指定的页面，当前页面是0，正整数向前跳转对应数量页面，负整数向后回退对应数量页面"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-20T08:07:46.000Z"}],["meta",{"property":"article:author","content":"正"}],["meta",{"property":"article:tag","content":"bom"}],["meta",{"property":"article:published_time","content":"2022-11-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-20T08:07:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"BOM 相关\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-20T08:07:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"正\\",\\"url\\":\\"https://github.com/zzlm0107\\"}]}"]]},"headers":[{"level":2,"title":"navigator对象","slug":"navigator对象","link":"#navigator对象","children":[]},{"level":2,"title":"history对象","slug":"history对象","link":"#history对象","children":[]},{"level":2,"title":"location对象","slug":"location对象","link":"#location对象","children":[]},{"level":2,"title":"JSON对象","slug":"json对象","link":"#json对象","children":[]},{"level":2,"title":"本地/会话存储","slug":"本地-会话存储","link":"#本地-会话存储","children":[]},{"level":2,"title":"计时器","slug":"计时器","link":"#计时器","children":[]}],"git":{"createdTime":1689840466000,"updatedTime":1689840466000,"contributors":[{"name":"zzlm0107","email":"zzlm0107@163.com","commits":1}]},"readingTime":{"minutes":2.62,"words":785},"filePathRelative":"code/webDev/javascript/bom.md","localizedDate":"2022年11月3日","excerpt":"<p>browser object model 浏览器对象模型。BOM可以使我们通过JS来操作浏览器，<strong>注意浏览器的全局对象只有一个即window，下面的说明对象都是挂载在window的，属于是window的属性。只是书写时会省略掉window</strong></p>\\n<h2> navigator对象</h2>\\n<p>代表的当前浏览器的信息，使用较少，其中主要用 <strong>userAgent属性</strong> 来判断浏览器标识。</p>\\n<h2> history对象</h2>\\n<p>history对象可以用来操作浏览器的历史记录，实现向前或向后翻页。</p>\\n<ul>\\n<li>\\n<p><code>history.back()</code>: 回退到上一个页面</p>\\n</li>\\n<li>\\n<p><code>history.forward()</code>: 前进到下一个页面</p>\\n</li>\\n<li>\\n<p><code>history.go(参数)</code>: 跳转到指定的页面，当前页面是0，正整数向前跳转对应数量页面，负整数向后回退对应数量页面</p>\\n</li>\\n</ul>","autoDesc":true}');export{t as data};
