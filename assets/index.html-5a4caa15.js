import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as i,e as a}from"./app-57c7840a.js";const l={},r=a('<p>学习前端的基础部分不外乎主要是HTML和CSS，前者是一个网页的骨架，后者是一个网页的样貌。</p><h2 id="基础了解" tabindex="-1"><a class="header-anchor" href="#基础了解" aria-hidden="true">#</a> 基础了解</h2><ul><li><p>HTML（超文本标记语言——HyperText Markup Language）是一种用来结构化 Web 网页及其内容的标记语言,它定义了网页内容的含义和结构。HTML 由一系列的 <strong>元素标签</strong> 组成，这些元素可以用来包围不同部分的内容，使其以某种方式呈现或者工作。</p></li><li><p>层叠样式表（Cascading Style Sheets，缩写为 CSS）是一种样式表语言，用来描述 HTML 或 XML 文档的呈现。CSS 描述了在屏幕、纸质、音频等其他媒体上的元素应该如何被渲染的问题。</p></li></ul><h2 id="css-预处理器" tabindex="-1"><a class="header-anchor" href="#css-预处理器" aria-hidden="true">#</a> CSS 预处理器</h2><h3 id="css的优缺点" tabindex="-1"><a class="header-anchor" href="#css的优缺点" aria-hidden="true">#</a> css的优缺点</h3><p>使用css可以很方便的开发网页样式和外观，简单的几行样式语句就可以让你的网页大放异彩。但css毕竟不是编程语言，无法做到灵活性的复用和变通，只是单纯地进行属性描述，所以会出现大量重复语句，使得代码难以组织和维护。</p><h3 id="什么是css预处理器" tabindex="-1"><a class="header-anchor" href="#什么是css预处理器" aria-hidden="true">#</a> 什么是css预处理器</h3><p>争对css原生的缺陷，有人就开发出了css预处理器，以一种专门的编程语言，为CSS增加一些编程特性，开发者用这种预处理器语言进行样式书写工作，然后预处理器将开发者所写的内容编译成正常的CSS文件，供项目使用。</p><p>CSS预编译器现如今已经成为开发CSS的标配，极大提升了CSS开发的效率：</p><ul><li>增强编程能力</li><li>增强可复用性</li><li>增强可维护性</li><li>更便于解决浏览器兼容性</li></ul><p>不同的预编译器特性虽然有差异，但核心功能围绕的目标是相同的：</p><ul><li>嵌套</li><li>变量</li><li>mixin/继承</li><li>运算</li><li>模块化</li></ul><p>目前最常见的两个css预处理器即为 <strong>Less</strong> 和 <strong>Sass</strong>。</p>',13),c=[r];function t(n,d){return e(),i("div",null,c)}const p=s(l,[["render",t],["__file","index.html.vue"]]);export{p as default};
