import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,a as s,b as n,d as e,e as t}from"./app-8f05f71b.js";const l={},r=s("strong",null,"Pinia 官网",-1),u={href:"https://pinia.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},d=t(`<h2 id="pinia简介" tabindex="-1"><a class="header-anchor" href="#pinia简介" aria-hidden="true">#</a> Pinia简介</h2><p>pinia是vue官方提出的新一代状态管理工具，主要是为了适配vue3推行的组合式api，所以pinia也同样采用了组合式api的写法，并兼容vuex的选项式写法，成为目前vue3项目最热门的状态管理工具。</p><p>下载安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> pinia
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后在项目src目录下创建 <code>store/index.ts</code> 创建仓库，在 <code>main.ts</code> 里注册仓库即可</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createPinia <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> store

<span class="token comment">// main.ts</span>
<span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;@/store/index&#39;</span>
<span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),k=s("code",null,"store/modules/",-1),v={href:"https://pinia.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},m=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/store/modules/user.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> defineStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useUserStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 仓库存取用户token</span>
  <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token comment">/**
   * 用户登录方法
   */</span>
  <span class="token keyword">function</span> <span class="token function">userLogin</span><span class="token punctuation">(</span>form<span class="token operator">:</span> loginForm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> token<span class="token punctuation">,</span> userLogin <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b=s("code",null,"localStorage",-1),g={href:"https://prazdevs.github.io/pinia-plugin-persistedstate/zh/guide/",target:"_blank",rel:"noopener noreferrer"};function f(h,_){const a=o("ExternalLinkIcon");return i(),c("div",null,[s("p",null,[r,n(),s("a",u,[n("https://pinia.vuejs.org/zh/"),e(a)])]),d,s("p",null,[n("之后就可以在 "),k,n(" 下创建分类小仓库供我们使用了；具体使用方法参考 "),s("a",v,[n("pinia官方文档"),e(a)])]),m,s("p",null,[n("此外的一个问题就是如果页面刷新会导致仓库初始化，数据都变为初始值。对于一些简单数据我们可以直接用 "),b,n(" 存储（注意对象的json转化），初始化时直接读取。若想要大范围持久存储，可以使用pinia持久化插件 "),s("a",g,[n("pinia-plugin-persistedstate"),e(a)]),n(" 具体使用方式查看官方文档。")])])}const x=p(l,[["render",f],["__file","pinia.html.vue"]]);export{x as default};
