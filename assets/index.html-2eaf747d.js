import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as a,c as s,a as e,b as t,d as c,e as i}from"./app-57c7840a.js";const l={},d=e("h2",{id:"什么是vue",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#什么是vue","aria-hidden":"true"},"#"),t(" 什么是vue")],-1),h=e("p",null,"是一款用于构建用户界面的 JavaScript 框架。它基于标准 HTML、CSS 和 JavaScript 构建，并提供了一套声明式的、组件化的编程模型，帮助你高效地开发用户界面。",-1),_=e("p",null,"并且vue是国内开发的一款前端框架，现已在全球热门发展，与react共同构成了前端生态的重要部分。",-1),p=e("strong",null,"vue官网",-1),u={href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},v=i('<h2 id="为什么要使用" tabindex="-1"><a class="header-anchor" href="#为什么要使用" aria-hidden="true">#</a> 为什么要使用</h2><p>使用例如vue和react等前端框架,主要是解决原生JS的操作效率问题，原生js的获取模板，绑定事件等一系列操作如果用于项目开发过于繁琐，影响效率；所以前端框架就出现了，提供非常简便快捷的语法来操作dom，然后框架会将自己的语法编译转化为原生的js供浏览器解析。在不影响功能的基础上大幅提升开发效率。</p><h2 id="vue的特性" tabindex="-1"><a class="header-anchor" href="#vue的特性" aria-hidden="true">#</a> vue的特性</h2><ol><li><p><strong>MVVM模型</strong>，通过VM（view Model）视图模型即vue自身处理页面数据变化，并将重要数据同步给后台模型。</p></li><li><p><strong>组件化思想</strong>，把图形、非图形的各种逻辑均抽象为一个组件，提高复用性，降低耦合度。</p></li><li><p><strong>指令系统</strong>， 提供了多种指令，直接在模板中使用，提高操作dom的效率。</p></li><li><p>还有更多...</p></li></ol>',4);function f(m,x){const o=n("ExternalLinkIcon");return a(),s("div",null,[d,h,_,e("p",null,[p,t(),e("a",u,[t("https://cn.vuejs.org/"),c(o)])]),v])}const S=r(l,[["render",f],["__file","index.html.vue"]]);export{S as default};
